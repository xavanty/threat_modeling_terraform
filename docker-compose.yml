version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - AWS_REGION=${AWS_REGION:-sa-east-1}
      - DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME:-ia-threat-modeling-history-dev}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-ia-threat-modeling-uploads-dev-75ee5470}
      # AWS credentials from environment (preferred for containers)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SHARED_CREDENTIALS_FILE=/home/nodejs/.aws/credentials
      - AWS_CONFIG_FILE=/home/nodejs/.aws/config
    volumes:
      # Mount AWS credentials (optional, prefer env vars for containers)
      - ~/.aws:/home/nodejs/.aws:ro
    restart: unless-stopped
    networks:
      - threat-modeling-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

networks:
  threat-modeling-network:
    driver: bridge

# Optional: Add nginx reverse proxy for production
# Uncomment and configure as needed
#  nginx:
#    image: nginx:alpine
#    ports:
#      - "80:80"
#      - "443:443" 
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - app
#    networks:
#      - threat-modeling-network
